{"ast":null,"code":"var _jsxFileName = \"/Users/vanessabrioso/Documents/GitHub/spotify-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Login from './Login';\nimport { useEffect, useState } from 'react';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\nfunction App() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [{}, dispatch] = useDataLayerValue();\n\n  //Run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\"; //We clean the token from the url for safety reasons, and to look cleaner.\n    const _token = hash.access_token; //We get the access token from the hash\n\n    if (_token) {\n      setToken(_token); //if we have a token, we set it in the state\n\n      dispatch({\n        type: 'SE'\n      });\n      spotify.setAccessToken(_token); //giving the access_token to spotify api\n\n      spotify.getMe().then(user => {\n        console.log(user);\n      }); //get user account info\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/Z/s3wOVnI/Tq810q74iTlGI32U=\", false, function () {\n  return [useDataLayerValue];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Login","useEffect","useState","getTokenFromUrl","SpotifyWebApi","Player","useDataLayerValue","jsxDEV","_jsxDEV","spotify","App","_s","token","setToken","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","user","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vanessabrioso/Documents/GitHub/spotify-clone/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Login from './Login';\nimport { useEffect, useState } from 'react';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [{}, dispatch] = useDataLayerValue();\n\n  //Run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\"; //We clean the token from the url for safety reasons, and to look cleaner.\n    const _token = hash.access_token; //We get the access token from the hash\n\n    if (_token) {\n      setToken(_token); //if we have a token, we set it in the state\n\n      dispatch({\n        type: 'SE'\n      });\n\n      spotify.setAccessToken(_token); //giving the access_token to spotify api\n\n      spotify.getMe().then(user => {\n        console.log(user);\n      }) //get user account info\n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      { token ? ( <Player /> ) : (  <Login />  ) }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,SAAS;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,iBAAiB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAG,IAAIL,aAAa,EAAE;AAEnC,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC,CAAC,CAAC,EAAEY,QAAQ,CAAC,GAAGR,iBAAiB,EAAE;;EAE1C;EACAL,SAAS,CAAC,MAAM;IACd,MAAMc,IAAI,GAAGZ,eAAe,EAAE;IAC9Ba,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAG,EAAE,CAAC,CAAC;IAC3B,MAAMG,MAAM,GAAGH,IAAI,CAACI,YAAY,CAAC,CAAC;;IAElC,IAAID,MAAM,EAAE;MACVL,QAAQ,CAACK,MAAM,CAAC,CAAC,CAAC;;MAElBJ,QAAQ,CAAC;QACPM,IAAI,EAAE;MACR,CAAC,CAAC;MAEFX,OAAO,CAACY,cAAc,CAACH,MAAM,CAAC,CAAC,CAAC;;MAEhCT,OAAO,CAACa,KAAK,EAAE,CAACC,IAAI,CAACC,IAAI,IAAI;QAC3BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC,CAAC,EAAC;IACL;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAChBhB,KAAK,gBAAKJ,OAAA,CAACH,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAAQxB,OAAA,CAACR,KAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAM;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtC;AAEV;AAACrB,EAAA,CA9BQD,GAAG;EAAA,QAEaJ,iBAAiB;AAAA;AAAA2B,EAAA,GAFjCvB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}