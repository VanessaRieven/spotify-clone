{"ast":null,"code":"var _jsxFileName = \"/Users/vanessabrioso/Documents/GitHub/spotify-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Login from './Login';\nimport { useEffect, useState } from 'react';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi();\nfunction App() {\n  _s();\n  const [{\n    user,\n    token\n  }, dispatch] = useDataLayerValue(); //use data layer value\n\n  //Run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\"; //We clean the token from the url for safety reasons, and to look cleaner.\n    const _token = hash.access_token; //We get the access token from the hash\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      });\n      spotify.setAccessToken(_token); //giving the access_token to spotify api\n\n      //get user account info\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      });\n    }\n  }, []);\n  console.log(token);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: token ? /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WaEVPrhstsCUlna9FyHo/78Ugc4=\", false, function () {\n  return [useDataLayerValue];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Login","useEffect","useState","getTokenFromUrl","SpotifyWebApi","Player","useDataLayerValue","jsxDEV","_jsxDEV","spotify","App","_s","user","token","dispatch","hash","window","location","_token","access_token","type","setAccessToken","getMe","then","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vanessabrioso/Documents/GitHub/spotify-clone/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport Login from './Login';\nimport { useEffect, useState } from 'react';\nimport { getTokenFromUrl } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport Player from './Player';\nimport { useDataLayerValue } from './DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{user, token}, dispatch] = useDataLayerValue(); //use data layer value\n\n  //Run code based on a given condition\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\"; //We clean the token from the url for safety reasons, and to look cleaner.\n    const _token = hash.access_token; //We get the access token from the hash\n\n    if (_token) {\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      })\n\n      spotify.setAccessToken(_token); //giving the access_token to spotify api\n\n      //get user account info\n      spotify.getMe().then(user => {\n        dispatch({\n          type: 'SET_USER',\n          user: user\n        });\n      }) \n    }\n  }, []);\n\n  console.log(token);\n  return (\n    <div className=\"app\">\n      { token ? ( <Player /> ) : (  <Login />  ) }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,SAAS;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,WAAW;AAC3C,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,iBAAiB,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAG,IAAIL,aAAa,EAAE;AAEnC,SAASM,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAAC;IAACC,IAAI;IAAEC;EAAK,CAAC,EAAEC,QAAQ,CAAC,GAAGR,iBAAiB,EAAE,CAAC,CAAC;;EAEvD;EACAL,SAAS,CAAC,MAAM;IACd,MAAMc,IAAI,GAAGZ,eAAe,EAAE;IAC9Ba,MAAM,CAACC,QAAQ,CAACF,IAAI,GAAG,EAAE,CAAC,CAAC;IAC3B,MAAMG,MAAM,GAAGH,IAAI,CAACI,YAAY,CAAC,CAAC;;IAElC,IAAID,MAAM,EAAE;MACVJ,QAAQ,CAAC;QACPM,IAAI,EAAE,WAAW;QACjBP,KAAK,EAAEK;MACT,CAAC,CAAC;MAEFT,OAAO,CAACY,cAAc,CAACH,MAAM,CAAC,CAAC,CAAC;;MAEhC;MACAT,OAAO,CAACa,KAAK,EAAE,CAACC,IAAI,CAACX,IAAI,IAAI;QAC3BE,QAAQ,CAAC;UACPM,IAAI,EAAE,UAAU;UAChBR,IAAI,EAAEA;QACR,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAENY,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EAClB,oBACEL,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAChBd,KAAK,gBAAKL,OAAA,CAACH,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAAQvB,OAAA,CAACR,KAAK;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAM;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACtC;AAEV;AAACpB,EAAA,CAjCQD,GAAG;EAAA,QACwBJ,iBAAiB;AAAA;AAAA0B,EAAA,GAD5CtB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}