{"ast":null,"code":"var _jsxFileName = \"/Users/vanessabrioso/Documents/GitHub/spotify-clone/src/Body.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './Body.css';\nimport Header from './Header';\nimport { useDataLayerValue } from './DataLayer';\nimport PlayCircleFilledOutlinedIcon from '@mui/icons-material/PlayCircleFilledOutlined';\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\nimport SongRow from './SongRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Body(_ref) {\n  _s();\n  let {\n    spotify\n  } = _ref;\n  const [{\n    discover_weekly\n  }, dispatch] = useDataLayerValue();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodyInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.images[0].url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bodyInfoText\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"PLAYLIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Discover Weekly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bodySongs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bodyIcons\",\n        children: [/*#__PURE__*/_jsxDEV(PlayCircleFilledOutlinedIcon, {\n          className: \"bodyShuffle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FavoriteBorderOutlinedIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHorizOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), discover_weekly === null || discover_weekly === void 0 ? void 0 : discover_weekly.tracks.items.map(item => {\n        /*#__PURE__*/_jsxDEV(SongRow, {\n          track: item.track\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(Body, \"aJtvf5xpGhk+gV7Pf9ixGsYXuWU=\", false, function () {\n  return [useDataLayerValue];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","Header","useDataLayerValue","PlayCircleFilledOutlinedIcon","FavoriteBorderOutlinedIcon","MoreHorizOutlinedIcon","SongRow","jsxDEV","_jsxDEV","Body","_ref","_s","spotify","discover_weekly","dispatch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","images","url","alt","description","fontSize","tracks","items","map","item","track","_c","$RefreshReg$"],"sources":["/Users/vanessabrioso/Documents/GitHub/spotify-clone/src/Body.js"],"sourcesContent":["import React from 'react'\nimport './Body.css'\nimport Header from './Header'\nimport { useDataLayerValue } from './DataLayer';\nimport PlayCircleFilledOutlinedIcon from '@mui/icons-material/PlayCircleFilledOutlined';\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined';\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\nimport SongRow from './SongRow';\n\nfunction Body({spotify}) {\n       const [{ discover_weekly }, dispatch] = useDataLayerValue();\n\n  return (\n    <div className='body'>\n      <Header spotify={spotify}/>\n      <div className='bodyInfo'>\n        <img src={discover_weekly?.images[0].url} alt=\"\" />\n        <div className='bodyInfoText'>  \n          <strong>PLAYLIST</strong>\n          <h2>Discover Weekly</h2>\n          <p>{discover_weekly?.description}</p>\n        </div>\n      </div>\n\n      <div className='bodySongs'>\n        <div className=\"bodyIcons\">\n          <PlayCircleFilledOutlinedIcon className='bodyShuffle'/>\n          <FavoriteBorderOutlinedIcon fontSize=\"large\" />\n          <MoreHorizOutlinedIcon />\n        </div>\n        {discover_weekly?.tracks.items.map(item => {\n          <SongRow track={item.track} />\n        })}\n      </div>  \n    </div>\n  )\n}\n\nexport default Body\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}